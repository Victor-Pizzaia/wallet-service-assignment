# Configuration for Spring Boot Application
spring.application.name=wallet-service-assignment
spring.mvc.servlet.path=/api/v1

# Configuration for connect in Database (PostgreSQL)
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/${POSTGRES_DB:wallet_service_assignment}
spring.datasource.username=${POSTGRES_USER:root}
spring.datasource.password=${POSTGRES_PASSWORD:pizzaDeBatata}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration for Flyway Identify DB 
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.create-schemas=true

# Configuration for security JsonWebToken
security.jwt.encryption_key=${JWT_SECRET:rN59JmShwttGkMNX5soAEStN8r9A+M1OZx38gP4kn2MVaX0w9uCZTLP5n70yQ60Kcu7dnqkZk6a8chPXoJfuhA==}
security.jwt.expiration_time=${JWT_EXPIRATION:3600000}

# Configuration for Spring Modulith Outbox Pattern
spring.modulith.events.outbox.enabled=true
spring.modulith.events.kafka.enabled=true

# Configuration for Kafka to integrate with Spring Modulith
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9094}
spring.kafka.listener.type=single
spring.kafka.listener.ack-mode=RECORD
spring.kafka.retry.topic.enabled=true
spring.kafka.retry.topic.attempts=3
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Configuration for logging
logging.file.name=logs/app.log

spring.cache.type=redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
cache.ttl.default=5
cache.ttl.walletBalance=30
cache.ttl.idempotency=1
